// <auto-generated />
using System;
using ClienteApi.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace ClienteApi.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.8")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ClienteApi.Models.Login.login", b =>
                {
                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Email");

                    b.ToTable("Login");

                    b.HasData(
                        new
                        {
                            Email = "rodrigo_toledo@outlook.com",
                            Password = "1234"
                        },
                        new
                        {
                            Email = "giulia@outlook.com",
                            Password = "4321"
                        });
                });

            modelBuilder.Entity("ClienteApi.Models.Ponto.ponto", b =>
                {
                    b.Property<int>("PontoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Entrada")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("Saida")
                        .HasColumnType("datetime2");

                    b.HasKey("PontoId");

                    b.ToTable("Ponto");

                    b.HasData(
                        new
                        {
                            PontoId = 1,
                            Email = "rodrigo_toledo@outlook.com",
                            Entrada = new DateTime(2023, 11, 18, 16, 18, 16, 758, DateTimeKind.Local).AddTicks(6157),
                            Saida = new DateTime(2023, 11, 18, 16, 18, 16, 761, DateTimeKind.Local).AddTicks(348)
                        },
                        new
                        {
                            PontoId = 2,
                            Email = "giulia@outlook.com",
                            Entrada = new DateTime(2023, 11, 18, 16, 18, 16, 761, DateTimeKind.Local).AddTicks(1599),
                            Saida = new DateTime(2023, 11, 18, 16, 18, 16, 761, DateTimeKind.Local).AddTicks(1620)
                        });
                });

            modelBuilder.Entity("ClienteApi.Models.funcionario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("MyCargo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("MyCpf")
                        .HasColumnType("float");

                    b.Property<string>("MyName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MyPhone")
                        .HasColumnType("int");

                    b.Property<double>("MySalario")
                        .HasColumnType("float");

                    b.Property<string>("Mybirthdate")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Myemail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Myferias")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Funcionarios");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            MyCargo = "Pleno",
                            MyCpf = 0.0,
                            MyName = "Rodrigo",
                            MyPhone = 119765,
                            MySalario = 5000.0,
                            Mybirthdate = "00000",
                            Myemail = "rodrigo_toledo@outlook.com",
                            Myferias = "teste"
                        },
                        new
                        {
                            Id = 2,
                            MyCargo = "Pleno",
                            MyCpf = 0.0,
                            MyName = "Rodrigo",
                            MyPhone = 119765,
                            MySalario = 5000.0,
                            Mybirthdate = "00000",
                            Myemail = "rodrigo_toledo@outlook.com",
                            Myferias = "teste"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
